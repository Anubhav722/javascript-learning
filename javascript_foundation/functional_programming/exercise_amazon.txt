// Amazon shopping

const user = {
	name: 'Kim',
	active: true,
	cart: [],
	puchases: []
}

puchaseItem


// Implement a cart feature:
// 1. Add item to the cart
// 2. Add 3% tax to item in the cart.
// 3. Buy item: cart --> purchases
// 4. Empty cart



// bonus:
// accept refunds
// track user history


const compose = (f, g) => (...args) => f(g(...args));

purchaseItem(
	emptyCart,
	buyItem,
	applyTaxToItems,
	addItemToCart
)(user, {name: 'laptop', price: 200})



function purchaseItem(...fns) {
	return fns.reduce(compose);
}


function addItemToCart(user, item) {
	const updateCart = user.cart.concat(item)
	return Object.assign({}, user, {cart: updateCart});
}


function applyTaxToItems() {
	const {cart} = user;
	const taxRate = 1.3;
	const updatedCart = cart.map(item => {
	  return {
		name: item.name,
		price: item.price * taxRate
		}
	return Object.assign({}, user, {cart: updatedCart})
		
}

function buyItems(user) {
	return Object.assign({}, user, {purchases: user.cart})
}

function emptyItems(user) {
	return Object.assign({}, user, {cart: []})
}
